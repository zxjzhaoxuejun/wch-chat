<style lang="less">
@import '../less/details.less';
</style>
<template>
  <view class="art-container">
    <view class="header">
      <view class="title">{{content.title}}</view>
      <view class="thuor">
        <text>发布时间：{{content.create_time}}</text>
        <text>浏览量：{{content.view}}</text>
      </view>
    </view>
    <view class="section">
      <scroll-view scroll-y style="height: 99%;">
        <video class="video-class" src="{{host}}{{content.video}}" controls objectFit="fill"></video>
        <htmlParser :parserName="name" :parserContent.sync="content1"/>
      </scroll-view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import htmlParser from '../components/htmlParser';
import { formatDate, formatDateTime } from '../utils/dateFormatTime';
// import Api from '../utils/api';//开发版
import Api from '../utils/config'; //线上版

export default class FigureDetails extends wepy.page {
  config = {
    navigationBarTitleText: '人物详情',
    enablePullDownRefresh: false
  };
  data = {
    name: 'myHtmlParserKiner',
    content1: '',
    content: '',
    norId: '',
    type: '',
    host: ''
  };

  components = {
    htmlParser: htmlParser
  };

  methods = {};

  events = {};

  onShareAppMessage() {
    var id = this.norId;
    var type = this.type;
    return {
      title: this.content.art_title,
      path: '/pages/figure-details?id=' + id
    };
  }
  onLoad(options) {
    this.host = Api.img + '/';
    if (!options.id) return;
    var url = '';
    this.norId = options.id;
    url = Api.figureDetails + options.id;
    let self = this;
    wx.request({
      url: url,
      header: {
        'content-type': 'application/json' // 默认值
      },
      success: res => {
        res.data[0].create_time = formatDate(
          Number(res.data[0].create_time) * 1000
        );
        self.content1 = res.data[0].content;
        self.content = res.data[0];
        // self.content1 = res.data;
        //注意，在此处修改了content2之后，需要手动调用$apply()方法更新数据
        self.$apply();
        //调用通知接口通知组件更新数据
        self.$invoke('htmlParser', 'htmlParserNotice');
      }
    });
  }
}
</script>